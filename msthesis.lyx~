#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass UNCC-thesis
\begin_preamble
\usepackage{adjustbox}
\usepackage{xcolor}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{roman}
\end_layout

\begin_layout Plain Layout


\backslash
fbmatterchapterformat
\end_layout

\begin_layout Plain Layout

% Doctype should be either dissertation proposal, dissertation, or thesis.
\end_layout

\begin_layout Plain Layout

% If you're getting a master's, specify "thesis" below.
  
\end_layout

\begin_layout Plain Layout

% If you're getting a PhD, specify "dissertation" below.
\end_layout

\begin_layout Plain Layout


\backslash
doctype{thesis}
\end_layout

\begin_layout Plain Layout

%%%%%%%%%%%%%%%%     IMPORTANT! IMPORTANT! IMPORTANT! %%%%%%%%%%%%%%%%
\end_layout

\begin_layout Plain Layout

% The rules below MUST be followed for the abstract page and chapter titles
\end_layout

\begin_layout Plain Layout

% to be correctly formatted.
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

% 1.
 Only the first letter of the entire title should be capitalized to allow
 the 
\end_layout

\begin_layout Plain Layout

%    title to appear as required by the graduate school on the Abstract
 page.
\end_layout

\begin_layout Plain Layout

% 2.
 Write chapter titles in ALL CAPS.
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout


\backslash
title{Establishing autonomous swarm communication behavior within unmanned
 areial vehicles in a DE-centralized environment}
\end_layout

\begin_layout Plain Layout


\backslash
author{Terrill Earl Massey}
\end_layout

\begin_layout Plain Layout


\backslash
degree{Master of Science}
\end_layout

\begin_layout Plain Layout


\backslash
major{Electrical Engineering}
\end_layout

\begin_layout Plain Layout


\backslash
publicationyear{2015}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
advisor{Dr.
 James Conrad}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% Add the full name and title of all your committee members,
\end_layout

\begin_layout Plain Layout

% apart from your advisor, one by one.
  The style file expects
\end_layout

\begin_layout Plain Layout

% 3 to 5 committee members in addition to your advisor.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
committeeMember{Dr.
 Asis Nasipuri}
\end_layout

\begin_layout Plain Layout


\backslash
committeeMember{Dr.
 Bharat Joshi}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Generate the preliminary title page and copyright page.
\end_layout

\begin_layout Plain Layout


\backslash
maketitlepage
\end_layout

\begin_layout Plain Layout


\backslash
makecopyright
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Abstract
Many situations occur in which there is a need for some type of exploratory
 effort required for a large area that may be inaccessible to humans such
 as nuclear power plants or disaster areas.
 A quadrotor swarm is attractive for these applications because it proposes
 a method to autonomously share mission information between all of the participa
ting quadrotors and collaboratively complete a task.
 This allows an autonomous quadrotor swarm to perform tasks quickly when
 compared to manually operated quadrotors.
 Current research in quadrotor swarm algorithms does not take into account
 inaccessible or remote environments.
 Those swarms require the use of a remote coordination platform that tracks
 the position of the swarm and facilitates swarm coordination from a distance.
 This requires the swarm to be within line-of-sight of the remote coordinator.
 
\end_layout

\begin_layout Abstract
The research presented in this thesis aims to add more deployment and operation
 flexibility to a quadrotor swarm through the use of a DE-centralized coordinati
on algorithm in a wireless environment and a pre-exisiting on-board vision
 system.
 The constructed DE-centralized coordination algorithm provides a method
 to track the position of all participating quadrotors, maintains the geometric
 integrity of the swarm through coordinating specific movement commands
 to the followers, establishes a method to uniformly move the swarm to a
 desired position, and provides situational awareness to the swarm through
 collision detection.
 
\end_layout

\begin_layout Acknowledgements
I would like to acknowledge the National Aeronautical Space Administration
 for providing the North Carolina Space Grant funding for this research.
 
\end_layout

\begin_layout Dedication
To be constructed.
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
nomname}{LIST OF ABBREVIATIONS}
\end_layout

\begin_layout Plain Layout

% uncomment line below to title your nomenclature list as LIST OF SYMBOLS
\end_layout

\begin_layout Plain Layout

%
\backslash
renewcommand{
\backslash
nomname}{LIST OF SYMBOLS}
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{
\backslash
nomname}
\end_layout

\end_inset


\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "auto"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "ECE"
description "An acronym for Electrical and Computer Engineering."

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{page}{1}
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\begin_layout Plain Layout

% 2 inch top spacing for new chapters
\end_layout

\begin_layout Plain Layout


\backslash
bodychapterformat
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
introduction
\end_layout

\begin_layout Section
Research Motivation 
\end_layout

\begin_layout Standard
A quadrotor swarm is advantageous in situations where an explanatory effort
 is required for a large area.
 For example, a large natural disaster area that requires surveying for
 damage analysis would benefit from a swarm of quadrotors that autonomously
 collaborate with each other in order to sweep a large area in a quick time
 frame.
 Also with a quadrotor swarm, the information that the participating quadrotors
 can be shared within the swarm so that simple decisions can be made without
 human interference, for example, a participating quadrotor notifies the
 swarm that a certain sector within a survey region has been explored already,
 thus allowing for the swarm to move to the next sector without the wasted
 costs of re surveying a previous sector.
 Another benefit of quadrotor swarms lies within the robust nature of the
 swarm system.
 With a singular quadrotor, the exploratory mission is compromised when
 the quadrotor is terminated (due to depletion of power supply, various
 environmental influences,etc.).
 Therefore the success of the objective is influenced by the lifetime of
 quadrotor node.
 In comparison, the lifetime of a quadrotor swarm is influenced by the number
 active nodes within the swarm.
 Typically the integrity of the mission is not compromised until all quadrotor
 participants within the swarm are terminated.
 This allows quadrotor swarms to behave in a robust manner in where they
 can still perform a mission even in the presence of terminated or damaged
 quadrotor nodes.
 
\end_layout

\begin_layout Section
Research Objectives
\end_layout

\begin_layout Section
Research Contribution
\end_layout

\begin_layout Standard
This research contributes a framework that can establish a DE-centralized
 swarm algorithm.
 This is achieved through establishing the swarm coordination process on
 the swarm itself, which is referred to as a DE-centralized quadrotor swarm.
 This DE-centralized quadrotor swarm is realized through two main aspects
 that must be present.
 An on board vision system that resides on participating quadrotor platforms
 in the swarm, and a swarm algorithm that is implemented within the swarm
 itself.
 The vision system allows the participating quadrotors to establish their
 position in respect to the center of the swarm.
 The swarm algorithm is a communication based algorithm that accepts position
 data from all participating quadrotors and assigns the appropriate movement
 commands.
 The swarm algorithm is necessary in establishing situational awareness
 for each participating quadrotor, and coordinating vectorized movements
 for the entire swarm.
 The swarm algorithm, or coordination process resides in a master quadrotor
 platform that is designated as the coordinator.
 The other participating quadrotors are designated as followers, and receive
 movement commands from the coordinator in respect to the current position
 that the follower advertises to the coordinator.
 The position data that the follower coordinators are in respect to the
 coordinator.
 For availability, there may be multiple coordinators within a large swarm,
 in where each coordinator is responsible for its own area, or cluster.
 The coordinator at the lowest cluster (the first cluster established) will
 communicate movement vector commands to the rest of the swarm.
 
\end_layout

\begin_layout Standard
The contributions of this research is the establishment of the DE-centralized
 swarm algorithm/ swarm coordination process that issues movement commands
 based on a existing vision system that reports a position of a quadrotor
 based on its orientation to a beacon, obstacle detection within the swarm
 for early obstacle avoidance protocol, a process for swarm maintenance
 within the swarm, and a framework to communicate with an existing quadrotor
 flight controller in order so that the quadrotor can carry out movement
 commands issued by the swarm algorithm.
 
\end_layout

\begin_layout Standard
These contributions are advantageous in the sense that a DE-centralized
 swarm algorithm will guarantee a more flexible swarm deployment in where
 the swarm is not confined to a certain area.
 This allows the swarm to approach more versatile missions such as surveillance
 in a environment non accessible to humans.
 
\end_layout

\begin_layout Section
Organization of Thesis
\end_layout

\begin_layout Chapter
background and literature review 
\end_layout

\begin_layout Section
Quadrotor Platform Overview 
\end_layout

\begin_layout Standard
Quadrotor platforms are unmanned aerial vehicles that are composed of four
 rotating propellers.
 The four rotating propellers allow the quad rotor platform to sustain lift,
 and perform various aerial maneuvers with more precision when compared
 to a conventional helicopter platforms.
 With the capability of performing precise aerial movements combined with
 a relatively small frame structure, and low production costs, quadrotor
 platforms are attractive for hobbyist, surveillance, and payload manipulation.
 In the commercial industry, interest for quadrotor platforms is prevalent.
 DHL is such a company that has pursed the potential benefits of using quadrotor
 platforms for payload manipulation as seen in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:DHL-Quadrotor-Unmanned"

\end_inset

 .
 As shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:DHL-Quadrotor-Unmanned"

\end_inset

, these quadrotor platforms are capable of light payload manipulation that
 can be served as payload transportation and package deliveries.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figs/DHL_quadrotor.jpg
	scale 50
	rotateOrigin leftBottom

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
DHL Quadrotor Unmanned Aerial Vehicle used in Payload Transportation
\begin_inset CommandInset label
LatexCommand label
name "fig:DHL-Quadrotor-Unmanned"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In construction, quadrotor platforms are attractive for land surveying and
 mapping.
 When equipped with the appropriate sensor platform, such as LIDAR
\begin_inset CommandInset citation
LatexCommand cite
key "LIDAR"

\end_inset

 , land mapping can be efficient and fast due to the aerial maneuverability
 of the quadrotor platform and its ability to travel across an area relatively
 quickly when compared to conventional techniques for land surveying/mapping.
 Although a singular quad rotor is capable of performing the previously
 mentioned tasks of surveillance/land mapping and payload manipulation effective
ly, having multiple quadrotors autonomously collaborate together in order
 to achieve these tasks enhances efficiency, speed of execution, higher
 resilience to human error, and robustness.
 Quadrotor swarms also enables the use of particular applications that cannot
 be practically realized with a single quadrotor platform.
 One such application is the implementation of an Ad Hoc telecommunication
 network coverage area for disaster areas.
 Proposed by M.Sakti Alvissalim in 
\begin_inset CommandInset citation
LatexCommand cite
key "NetworkCoverageQuadrotorSwarms"

\end_inset

, quadrotor swarms can be outfitted in such a way in where each participating
 quadrotor provides certain coverage of an area, similar to a cellular site.
 Communication links are maintained within the swarm in order to establish
 end-to-end communication link from the client to the access point to the
 back bone network.
 
\end_layout

\begin_layout Standard
Recently, research interests have peaked in the realm of autonomous quadrotor
 swarms.
 GRASP laboratory from the University of Pennsylvania constructed and demonstrat
ed a centralized quadrotor swarm that perform various aerial maneuvers as
 depicted in
\begin_inset CommandInset citation
LatexCommand cite
key "GRASP"

\end_inset

.
 
\end_layout

\begin_layout Subsection
Quadrotor Platform Dynamic Model
\end_layout

\begin_layout Standard
A quadrotor is a unmanned aerial vehicle with four rotors.
 In most quadrotor applications, the rotors on the quadrotor platform are
 brush-less electric motors.
 Each rotor produces torque, which in turn produces thrust for the quadrotor
 platform.
 The higher the angular velocity of the rotor, the more thrust the rotor
 will produce.
 Certain combinations of angular velocities of the rotors will generate
 main thrust, pitch torque, and roll torque for the quadrotor 
\begin_inset CommandInset citation
LatexCommand cite
key "QUADROTORCRAFTCONTROL"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figs/quadrotor_dyanmic_model.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Quadrotor Dynamic Model.
 
\begin_inset CommandInset citation
LatexCommand cite
key "QUADROTORCRAFTCONTROL"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Quadrotor-Dynamic-Model"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Depicted in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Quadrotor-Dynamic-Model"

\end_inset

, the front rotor (M
\begin_inset Formula $_{1}$
\end_inset

) and the rear rotor (M
\begin_inset Formula $_{3}$
\end_inset

) rotate counter-clockwise, whereas the front rotor (M
\begin_inset Formula $_{2}$
\end_inset

 and the rear rotor (M
\begin_inset Formula $_{4}$
\end_inset

) rotate clockwise in order to produce and overall thrust vector (u) .
 The overall thrust vector(u) of the quadrotor platform is depicted as 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
u=f_{1}+f_{2}+f_{3}+f_{4}\label{eq:overall thrust}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where the overall thrust is equal to the summation of the individual thrusts
 of each motor.
 The amount of pitch torque that the quadrotor experience is a function
 of 
\begin_inset Formula $f_{1}-f_{3}$
\end_inset

,which is the difference of the thrust exerted by rotor M
\begin_inset Formula $_{1}$
\end_inset

and the force exerted by rotor M
\begin_inset Formula $_{3}$
\end_inset

.
 The amount of roll torque that the quadrotor performs is a function of
 
\begin_inset Formula $f_{2}-f_{4}$
\end_inset

, which is the difference between the thrust exerted by rotor M
\begin_inset Formula $_{2}$
\end_inset

and the thrust exerted by the rotor M
\begin_inset Formula $_{4}$
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "QUADROTORCRAFTCONTROL"

\end_inset

.
 
\end_layout

\begin_layout Standard
The amount of yaw torque that the quadrotor platform experience is the depicted
 as 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\tau_{Yaw}=\tau_{M_{1}}+\tau_{M_{2}}+\tau_{3_{1}}+\tau_{M_{4}}\label{eq:yaw torque}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\tau_{M_{i}}$
\end_inset

is the reaction torque of rotor i due to shaft acceleration and blade drag
 .
 The reaction torque is equal to the aerodynamic drag seen by the rotor
 blade.
 
\begin_inset CommandInset citation
LatexCommand cite
key "QUADROTORCRAFTCONTROL"

\end_inset

.
 The aerodynamic drag experienced by a given quadrotor rotor is represented
 as 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\tau_{Drag}=\frac{1}{2}pAv^{2}\label{eq:drag representation}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $p$
\end_inset

 is the air density, 
\begin_inset Formula $A$
\end_inset

 is the frontal area of the moving rotor blade, and 
\begin_inset Formula $v$
\end_inset

 is the blade object's velocity relative to the air.
 The angular velocity 
\begin_inset Formula $ω$
\end_inset

 is proportional to the linear velocity 
\begin_inset Formula $v$
\end_inset

 and radius 
\begin_inset Formula $r$
\end_inset

 of the rotor blade through the relationship depicted in equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:angular velocity"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
ω=\frac{v}{r}\label{eq:angular velocity}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The aerodynamic drag experienced by the quadrotor can be re-written as 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\tau_{Drag}=k_{drag}ω^{2}\label{eq:aerodynamic drag with angular velocity}
\end{equation}

\end_inset

 
\end_layout

\begin_layout Standard
where 
\begin_inset Formula $k_{drag}=\frac{1}{2R}pA$
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "QUADROTORCRAFTCONTROL"

\end_inset

.
 It can be assumed that 
\begin_inset Formula $k_{drag}$
\end_inset

 is a positive constant, due to the constant radius of the rotor blade,
 constant surface area of the blade, and the constant air pressure in the
 atmosphere for near surface flight (less than 100ft).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename figs/quadrotor_movement_model.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Quadrotor Platform Movement Model.
\begin_inset CommandInset citation
LatexCommand cite
key "QUADROTORCRAFTCONTROL"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Quadrotor-Platform-Movement-Model"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Typical motors used within a quadrotor platform are brush-less, electric
 motors that can be controlled by Electronic Speed Controllers(
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "ESC"
description "Electronic Speed Control"

\end_inset

).
 Electronic Speed controllers are advantageous for motor control because
 they offer a method to regulate the amount of power transferred to the
 motor.
 An ESC interprets a Pulse Width Modulation(
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "PWM"
description "Pulse Width Modulation"

\end_inset

) signal as an input that controls the amount of power transmitted to the
 motor and ultimately dictates the angular velocity of the motor.
 The higher angular velocity of the motor will correlate to a higher amount
 of thrust generated by the respective rotor.
 ESCs are also capable of regulating the amount of voltage.
 The ESC receives PWM control signals from an on-board Radio Frequency(
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "RF"
description "Radio Frequency"

\end_inset

) receiver or an auto-pilot system
\begin_inset CommandInset citation
LatexCommand cite
key "BRUSHLESSMOTOR"

\end_inset

.
 ESCs specifically designed for brush-less motors are required to be used.
 Brush-less ESC platforms drive brush-less motors through the transmission
 of a sequence of signals for rotation.
 
\end_layout

\begin_layout Standard
The amount of torque generated by the brush-less motors is defined as 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\tau=K_{t}(I-I_{0)})\label{eq:motor torque}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\tau$
\end_inset

 is the motor torque, 
\begin_inset Formula $I$
\end_inset

 is the input current, 
\begin_inset Formula $I_{0}$
\end_inset

 is the current when there is no load on the motor, and 
\begin_inset Formula $K_{t}$
\end_inset

 is the torque proportionality constant 
\begin_inset CommandInset citation
LatexCommand cite
key "gibianksyl"

\end_inset

.The torque proportionality constant can be viewed as the amount of torque
 a certain brush-less motor can produce under a given current.
 
\end_layout

\begin_layout Section
Current Swarm Research
\end_layout

\begin_layout Standard
Recently, GRASP laboratory of University of Pennsylvania has constructed
 a swarm of agile micro quadrotors
\begin_inset CommandInset citation
LatexCommand cite
key "GRASP"

\end_inset

.
 In the research conducted under the GRASP laboratory, micro quadrotors
 were utilized.
 Each participating micro quadrotor is outfitted with a flight control board,
 Electronic Speed Control motors, power supply, and Zigbee protocol transceivers
 as depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Micro-Quadrotor GRASP Laboratory"

\end_inset

 from 
\begin_inset CommandInset citation
LatexCommand cite
key "GRASP"

\end_inset

.
 The main flight control board on the micro quadrotor platform is an ARM
 Cortex-M3 processor with a 72 MHz clock frequency.
 To enable accurate maneuverability, the flight control board is equipped
 with a 3-axis accelerometer, and a 2-axis 2,000 deg/s rate gyroscope for
 roll and pitch axis, and a single axis 500 deg/s rate gyroscope for the
 yaw axis.
 An on board barometer is also used to measure the current altitude of the
 micro quadrotor platform.
 The communication platform is comprised of two Zigbee transceivers that
 can operate at 900 MHz or 2.4 GHz.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figs/GRASP quadrotor platform.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Micro Quadrotor Prototype constructed by GRASP Laboratory of University
 of Pennsylvania
\begin_inset CommandInset citation
LatexCommand cite
key "GRASP"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Micro-Quadrotor-Prototype-GRASP"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The general operation of the swarm of micro quadrotors constructed by GRASP
 laboratory, is based on a centralized coordination scheme.
 In GRASP laboratory's centralized coordination scheme, a fixed vision system
 that uses a Vicon motion capture system , senses the position of all participan
ts within the swarm.
 The fixed vision system then streams position data of the participating
 quadrotors to a base station via gigabit Ethernet which in turn determines
 the appropriate swarm coordination.
 The base station uses a MATLAB based process that coordinates movements
 within the swarm from processing the received position data of the fixed
 vision system, and developing respective movement commands for each participati
ng quadrotor.
 Movement commands are issued to the participating quadrotors every 10 milliseco
nds.Once the movement command is constructed for the appropriate participating
 quadrotor, the base station transmits the command to that quadrotor.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figs/system_level_arch_GRASP.png
	scale 85

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Overall System Architecture for Mini-Quadrotor Swarm Implementation
\begin_inset CommandInset citation
LatexCommand cite
key "GRASP"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Overall-System-Architectue-GRASP"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Overall-System-Architectue-GRASP"

\end_inset

, the altitude, pitch,roll and yaw, are controlled on the local control
 platform within the quadrotor, whereas, position feedback, and swarm coordinati
on are done within a off-board terminal outfitted with MATLAB.
 The vision system utilized within the swarm coordination provides feedback
 to the position controller within the system.
\end_layout

\begin_layout Standard
The swarm architecture implemented in the research conducted at GRASP laboratory
 uses a algorithm in where a team of quadrotors is organized into smaller
 groups.
 GRASP defines a group as a collection of participating quadrotors that
 work simultaneously to complete a single task.
 A team comprises of two or more groups that collaborate to complete an
 overall objective by completing parallel sub tasks 
\begin_inset CommandInset citation
LatexCommand cite
key "GRASP"

\end_inset

.
 The research assumes that participants within the group have the ability
 to communicate at higher data rates with lower latencies when compared
 to the communication established between groups.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename figs/quadrotor_swarm_architecture_GRASP.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Highlight of the Team Approach in the Swarm Architecture Composed by GRASP
 Laboratory
\begin_inset CommandInset citation
LatexCommand cite
key "GRASP"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:swarm formation architecture-GRASP"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Experimental testing was done with four quadrotors following a certain trajector
y.
 The performance of the trajectory following was characterized through comparing
 the actual position of the quadrotors and the desired position of the quadrotor
s.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figs/GRASP_RESULTS.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Formation following for a four quadrotor trajectory.
 In a the colored lines represent the desired trajectories for each of the
 four vehicles and the black lines represent the actual trajectories.
 The errors are shown in (b).
 The black line represents the formation error from the desired trajectory
 and the colored lines represent the local errors for each quadrotor 
\begin_inset CommandInset citation
LatexCommand cite
key "GRASP"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Formation-following-for-performance-GRASP"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The main strengths of the research proposed by GRASP laboratory are that
 the centralized coordination scheme allows for precise aerial maneuvers
 with high agility, and that swarm formations can be constructed with realative
 ease.
 The major drawback of the centralized coordination scheme is that the resulting
 swarm is confined to a certain region due to its dependence on an external
 vision system and base station as shown in Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Micro-Quadrotor-Swarm GRASP "

\end_inset

.
 This diminishes the flexibility of deployment for the swarm, thus limiting
 its applications.
 Therefore, there is a trade off for agility and speed of swarm formation
 with deployment flexibility.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figs/micro-quadrotor-swarm-GRASP.png

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Micro Quadrotor Swarm Constructed by GRASP Laboratory of University of Pennsylva
nia 
\begin_inset CommandInset label
LatexCommand label
name "fig:Micro-Quadrotor-Swarm GRASP "

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Quadrotor Platform 
\end_layout

\begin_layout Section
Hardware Architecture of Quadrotor Platform 
\end_layout

\begin_layout Subsubsection
Quadrotor Frame 
\end_layout

\begin_layout Subsubsection
Quadrtoror Power Supply 
\end_layout

\begin_layout Subsubsection
Motors 
\end_layout

\begin_layout Subsubsection
Quadrotor Flight Control Board 
\end_layout

\begin_layout Section
Software Architecture of Quadrotor Platform
\end_layout

\begin_layout Subsubsection
Flight Control User Interface 
\end_layout

\begin_layout Subsubsection
Flight Control Software 
\end_layout

\begin_layout Section
Quadrotor Platform Flight Capabilities 
\end_layout

\begin_layout Subsection
Flight Modes
\end_layout

\begin_layout Subsection
Power Characteristics
\end_layout

\begin_layout Subsection
Tuning capabilities For Flight Precision and Accuracy 
\end_layout

\begin_layout Chapter
Communication Platform 
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Subsection
Requirements and Desired Functionality of the Communication Platform
\end_layout

\begin_layout Standard
The purpose of the communication platform within the swarm is to provide
 a wireless medium to transmit and receive position data of the participating
 quadrotors and send 
\end_layout

\begin_layout Subsection
Decision of Platform Selection 
\end_layout

\begin_layout Section
Xbee Platform 
\end_layout

\begin_layout Standard
The xbee platform used within this research was the Xbee Series 2 platform.
 This platform is a low power, wireless transceiver that can be used for
 mesh networking solutions.
 The xbee platform follows a packet based transmission.
 The xbee platform is interfacable through a Universal Asynchronous Receiver/Tra
nsmitter(
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "UART"
description "Universal Asynchronous Receiver/Transmitter"

\end_inset

) serial interface.
 The UART serial interface is advantageous because it allows a UART equipped
 micro controller or processing unit to interface with the Xbee platform
 with relative ease.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figs/xbee_series_2.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Xbee Series 2 Platform
\begin_inset CommandInset citation
LatexCommand cite
key "xbeedatasheet"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Xbee Series 2 Specifications 
\end_layout

\begin_layout Standard
The RF performance characteristics of the Xbee Series 2 platform is depicted
 in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:RF-Performance-Specifications"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Indoor Operating Range
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
up to 40 meters
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Outdoor Operating Range
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
up to 120 meters (line-of-sight)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RF Data Rate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
250,000 bits per second 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reception Sensitivity 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-95 dBm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operating Frequency
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.4 GHz
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Frequency Channels 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
RF Performance Specifications for Xbee Series 2 Platform.
\begin_inset CommandInset label
LatexCommand label
name "tab:RF-Performance-Specifications"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "xbeedatasheet"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Xbee Series 2 platform operates within the 2.4 GHz Industrial Scientific
 Medical (
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "ISM"
description "Industrial Scientific Medical"

\end_inset

) band.
 This allows license free deployment and operation of the xbee platform.
 The antenna used within the Xbee platform is a integrated whip that is
 etched onto the platform.
 
\end_layout

\begin_layout Standard
The power specifications of the Xbee Series 2 platform is depicted in Table
 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Power-Specfications-for Xbee S2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Supply Voltage
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.8 -3.4 Volts
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operating Current(RF Transmission)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
40mA(@ 3.3Volts)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Operating Current(Receive)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
40mA(@ 3.3 Volts)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Power-down Current
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
<1 uA
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Power Specifications for Xbee Series 2 Platform
\begin_inset CommandInset label
LatexCommand label
name "tab:Power-Specfications-for Xbee S2"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "xbeedatasheet"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Xbee Series 2 Module Interfacing
\end_layout

\begin_layout Standard
The xbee module is interfaced through a logic-level asynchronous serial
 interface.
 The Pin connections utilized on the Xbee platform is depicted in Table
 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Relevant-Pin-Mapping for Xbee S2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pin #
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pin Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Logic Direction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pin Description 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VCC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Voltage for Power Supply
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DOUT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Logic Level Pin for Data Transmission
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DIN
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Input
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Logic Level Pin for Data Reception 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GND
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ground for entire Xbee Platform 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Relevant Pin Mapping of Xbee Series 2 Platform Used in Research 
\begin_inset CommandInset label
LatexCommand label
name "tab:Relevant-Pin-Mapping for Xbee S2"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As depicted in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Relevant-Pin-Mapping for Xbee S2"

\end_inset

, the serial interface is established with pins 2 and 3 for data transmission
 and data reception respectively.
 Data that is to be transmitted through RF propagation by the xbee module
 is sent in a serial fashion through pin 3 (DIN), whereas data that has
 been received by the xbee module can be accessed through pin 2 (DOUT).
 The data sent through the DIN pin should be sent in bursts known as packets.
 The structure of such a packet is depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Signal-Waveform-of-UART-datapacket"

\end_inset

.
 When the transmission line is idle (i.e.
 nothing is transmitted) the pin should receive a constant high logic level.
 Start delimiter of the UART packet is a single bit a logic level low.
 The payload of the packet follows immediately after the start delimiter.
 The maximum size of the payload is 1 byte (8 bits).
 After the last bit of the data payload is transmitted, a stop bit immediately
 follows.
 This stop bit is logic level high.
 There is no utilization of bit parity within the UART protocol for the
 Xbee platform configured for this research.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename figs/UART Packet Xbee S2.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Signal Waveform of UART Data Packet Configured for Xbee Series 2 Module
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Signal-Waveform-of-UART-datapacket"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "xbeedatasheet"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The serial characters that are sent to the DIN (Pin 3) line, will be stored
 into a serial receive buffer until it can be processed into a RF data stream
 for transmission.
 Likewise, when a RF data stream is captured by the Xbee module, it is stored
 in a RF receive buffer until the stream can be processed into a baseband
 signal, and eventually a UART data stream.
 This UART data stream will then be available at the DOUT will be stored
 in the Serial Transmit Buffer until the RF reception is complete.
 However, if the Serial Transmit Buffer becomes full in such that all of
 the data within the incoming RF packet cannot fit within the buffer, the
 whole packet will be dropped, and another attempt at receiving the RF packet
 will be necessary.
 The contents of the Serial Transmit Buffer will be available at the DOUT
 ( pin 2) line.
 Such a depiction of this data flow is in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Transmit-and-Receive-UART-dataflow"

\end_inset

.The Xbee platform cannot receive and transmit RF data concurrently.
 Therefore if serial data is sent to the DIN pin while the Xbee module is
 receiving RF data.
 The serial data will reside in the Serial Transmit Buffer until RF data
 has finished being obtained by the module.
 When this occurs, the serial data in the Serial Transmit Buffer will be
 processed into a RF stream, and propagated onto the RF link via the embedded
 antenna.
 The Serial Receive Buffer size is 202 bytes.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{adjustbox}{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename figs/UART Data Flow XbeeS2.png
	scale 59

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{adjustbox}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Transmit and Receive Data Flow for Xbee Series 2 Platform 
\begin_inset CommandInset label
LatexCommand label
name "fig:Transmit-and-Receive-UART-dataflow"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
ZigBee Networks
\end_layout

\begin_layout Standard
ZigBee is a networking protocol that Xbee Series 2 modules utilize.
 A zigbee network is a Personal Area Network (
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "PAN"
description "Personal Area Network"

\end_inset

) that consists of one coordinator, multiple routers and/or end devices.
 The first type of device within a ZigBee network is the Coordinator device.
 To construct a PAN, the coordinator must have a frequency channel and PAN
 ID selected on startup
\begin_inset CommandInset citation
LatexCommand cite
key "xbeedatasheet"

\end_inset

.
 These parameters can be set while in Command mode on the Xbee platform
 (Detailed in Xbee Series 2 Module Operation Modes).
 Once the PAN is established, other devices may join the PAN.
 However, in order for these devices to join the PAN, the PAN ID of the
 devices must match the PAN ID of the desired PAN to join.
 Once a device joins the PAN, a 16-bit network address will be assigned
 to it.
 Once this 16-bit address is assigned, the device can transmit/receive data
 with other particpating devices within the PAN.
 The network address of the coordinator will always be 0.
 A Xbee module can be configured to be a coordinator through setting the
 
\begin_inset Quotes eld
\end_inset

CE
\begin_inset Quotes erd
\end_inset

 parameter while in Command Mode.
 There can only be one Coordinator per PAN.
\end_layout

\begin_layout Standard
The second type of device within a ZigBee network, is the Router device.
 This device is an intermediate node that can route/relay data from other
 devices.The Router device also has the ability to allow other devices to
 join the PAN, and can assist in routing data throughout the PAN.
 When the Router device allows a device to join, it establishes a parent/child
 relationship in where the newly joined device is the child, and the Router
 device that the new device joined under, is the parent device
\begin_inset CommandInset citation
LatexCommand cite
key "xbeedatasheet"

\end_inset

.
 This relationship holds true when a device joins under the Coordinator
 device as well.
 As a parent device, the Router device(or Coordinator device) can route
 data on behalf of a child device to ensure it reaches the correct destination.
 
\end_layout

\begin_layout Standard
The third type of device within the ZigBee network is the End device.
 End devices can only communicate to the parent (Router device or Coordinator
 device) of which it joined.
 Therefore, it does not have routing capabilities like the Router device
 and Coordinator device.
 End devices also do not have the capability of allowing new devices to
 join the PAN.
 End devices however, are the only devices that can operate in the Low Power
 mode.
\end_layout

\begin_layout Standard
A depiction of a typical ZigBee network is in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Zigbee-Network-Topology"

\end_inset

.
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Zigbee-Network-Topology"

\end_inset

, the Router devices and Coordinator are located at the verticies of the
 PAN network, which allows them to route data to different regions of the
 network.
 However the expansion of the PAN is discontiuned at the End devices.
 If the a new device wishes to join the network, it must join under the
 Coordinator device or a available Router device of that PAN.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{adjustbox}{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename figs/zigbee network.png
	scale 80
	clip

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{adjustbox}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
ZigBee Network Topology
\begin_inset CommandInset label
LatexCommand label
name "fig:Zigbee-Network-Topology"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "xbeedatasheet"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
ZigBee Open Systems Interconnection (
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "OSI"
description "Open Systems Interconnection "

\end_inset

) Stack 
\end_layout

\begin_layout Standard
The ZigBee protocol is a upper layer protocol that handles the networking,
 transportation, presentation and application layers of communication of
 Xbee platforms.
 This protocol was constructed in order to compliment the Institute of Electrica
l and Electronics Engineers(
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "IEEE"
description "Institute of Electrical and Electronics Engineers\\\\"

\end_inset

) 802.15.4 protocol as depicited in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ZigBee802.15.4-OSI-Model"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{adjustbox}{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename figs/ZigBee_802-15-4-OSI.png
	scale 75

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{adjustbox}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
ZigBee/802.15.4 OSI Model
\begin_inset CommandInset label
LatexCommand label
name "fig:ZigBee802.15.4-OSI-Model"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "ZIGBEENETWORKS"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ZigBee802.15.4-OSI-Model"

\end_inset

, the IEEE 802.15.4 protocol is responsible for the physical, Media Access
 Control(
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "MAC"
description "Medium Acess Control\\\\"

\end_inset

), and the Logical Link Control (
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "LLC"
description "Logical Link Control"

\end_inset

) of the Xbee platform, whereas the ZigBee protocol is responsible for the
 higher levels of the communication stack such as the networking layer,
 transport layer, and application layer.
 
\end_layout

\begin_layout Standard
The physical layer as defined by 802.15.4 supports the frequency range of
 2.40 GHz to 2.42 GHz.
 This band is divided into 16 different channels, in which a PAN can occupy.
 The supported bit rate of 802.15.4 is 250 Kb/s 
\begin_inset CommandInset citation
LatexCommand cite
key "ZIGBEENETWORKS"

\end_inset

.
 The modulation scheme used within this particular Xbee model (Xbee Series
 2) is Direct Sequence Spread Spectrum (
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "DSSS"
description "Direct Sequence Spread Spectrum"

\end_inset

), Quadrature Phase Shift Keying(
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "QPSK"
description "Quadrature Phase Shift Keying"

\end_inset

)
\begin_inset CommandInset citation
LatexCommand cite
key "ZIGBEENETWORKS"

\end_inset

.
 DSSS allows the transmitted information to occupy a larger bandwidth with
 a lower spectral density for each signal when compared to a non DSSS signal
 as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:DSSS-Scheme-used-in-802154"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{adjustbox}{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename figs/802.15.4-DSSS.png
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{adjustbox}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
DSSS Scheme used in 802.15.4 PHY 
\begin_inset CommandInset label
LatexCommand label
name "fig:DSSS-Scheme-used-in-802154"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "ZIGBEENETWORKS"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The DSSS scheme is advantegous in the sense that it reduces the interference
 between frequency channels within the frequency band.
 The 802.15.4 MAC utilizes the Carrier Sense Multiple Acess-Collision Avoidance
 (
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "CSMA-CA"
description "Carrier Sense Multiple Access - Collision Avoidance"

\end_inset

).
 In CSMA-CA all participating nodes listen to the medium prior to transmit.
 If a node detects a spectral energy on the medium that is higher than a
 certain threshold, the node will declare the medium is in use.
 When the node detects that the medium is in use, it waits for a random
 period of time, known as random-backoff.
 After this period is up, the node will listen to the channel again in order
 to determine if the medium is not busy.
 If the medium is not busy, the node will transmit.
 If the node determines if the medium is still busy, it will increase the
 window for the random backoff period, and retry transmission.
 This process will be repeated, with increasing the random backoff period
 to a maximum pre-determined value, until the medium is determined as not
 busy.
 Combined with 802.11 LLC, the 802.15.4 supports star topology networks and
 peer-to-peer networks
\begin_inset CommandInset citation
LatexCommand cite
key "ZIGBEENETWORKS"

\end_inset

.
 
\end_layout

\begin_layout Standard
The ZigBee protocol is an upper layer addition to 802.15.4 that essentially
 adds these contributions:
\end_layout

\begin_layout Itemize
Extra Security/Encryption Services (within the Transport Layer).
\end_layout

\begin_layout Itemize
Association and Authentication within the network layer( only valid nodes
 with correct PAN IDs can join the network).
\end_layout

\begin_layout Itemize
A reactive ad-hoc protocol (Ad-Hoc On Demand Routing 
\begin_inset CommandInset citation
LatexCommand cite
key "Perkins:2003:AHO:RFC3561"

\end_inset

) for data forwarding and routing.
\end_layout

\begin_layout Itemize
Unique Application Services such as clusters which are groups of nodes that
 are responsible for certain functions (i.e.
 light automation in a smart-home network).
 
\end_layout

\begin_layout Subsubsection
Coordinator Behavior during Network Formation
\end_layout

\begin_layout Standard
When a Xbee module configured as a Coordinator device powers on, it performs
 the following procedure.
 
\end_layout

\begin_layout Enumerate
Perform a energy scan on multiple frequency channels to determine a unused
 frequency channel for the PAN.
\end_layout

\begin_layout Enumerate
Frequency channels with high detected energy levels are removed from considerati
on, and a list of low energy frequency channels remain.
 
\end_layout

\begin_layout Enumerate
Issue a 802.15.4 beacon request command on a low energy frequency channels.
 
\end_layout

\begin_layout Enumerate
If there are devices (Router or End Device) operating on the frequency channel
 on which a beacon request command was broadcasted, the devices respond
 with a beacon transmission that indicates the PAN ID of their operating
 PAN and if joining is allowed.
 If there is a device response with joining not allowed, the Coordinator
 will move to the next low energy frequency channel.
 
\end_layout

\begin_layout Enumerate
Repeat Steps 3 and 4 until a low energy frequency channel with no beacon
 response is found.
 
\end_layout

\begin_layout Subsubsection
Router Device Behavior During Network Formation
\end_layout

\begin_layout Standard
When a Xbee module configured as a Router device is activated, it follows
 the following procedure for integrating into a PAN.
 
\end_layout

\begin_layout Enumerate
Issue a 802.15.4 beacon request command on a frequency channel in order to
 identify local PANs.
 
\end_layout

\begin_layout Enumerate
Listen to the channel for a response.
 If there are devices operating on the certain frequency channel ( nearby
 Coordinator devices or Router devices), they will respond to the 802.15.4
 beacon request issued by the new Router device with the PAN ID and the
 frequency channel that they are operating on.
 The Router determins if the valid PAN is found based on the PAN ID in the
 response of the nearby devices.
 In this research, the PAN ID of all established PANs are preset in the
 Coordinator's firmware.
 Therefore, the Router determines that the PAN ID is vailid if it matches
 the PAN ID parameter within its firmware.
 
\end_layout

\begin_layout Enumerate
If there is no response on the current frequency channel, repeat steps 2
 and 3 on the next frequency channel.
\end_layout

\begin_layout Enumerate
If a valid PAN ID is found, issue a join request to the device that sent
 the beacon response.
 
\end_layout

\begin_layout Enumerate
If joining is successful, the device the response to the join request will
 be a join confirmation.
\end_layout

\begin_layout Enumerate
The Router device is now within the PAN.
\end_layout

\begin_layout Subsubsection
End Device Behavior During Network Formation
\end_layout

\begin_layout Standard
The process of a End Device joining a PAN is identical to the process of
 a Router device joining a PAN.
\end_layout

\begin_layout Subsubsection
Network Addressing 
\end_layout

\begin_layout Standard
Two address types are utilized within a ZigBee network.
 These address types are 16-bit network addresses, and 64-bit addresses.
 
\end_layout

\begin_layout Standard
A 16-bit network address is assigned to a Xbee node when it joins a PAN.
 Each Xbee node within the PAN contains a unique 16-bit network address.
 The 16-bit network address of a node can change over time.
 The address can change if the Xbee node leaves the PAN, then rejoins, or
 if the device type of the Xbee node changes (ie.
 from Router device to End device)
\begin_inset CommandInset citation
LatexCommand cite
key "xbeedatasheet"

\end_inset

.
 As disscused in the beginning of this section, the Coordinator of the PAN
 will always have a 16-bit network address of 0.
 The other address type is 64-bit addressing.
 Every Xbee module has a unqiue 64-bit address.
 This address is permanant for the Xbee module.
 
\end_layout

\begin_layout Subsection
Xbee Series 2 Module Operation Modes
\end_layout

\begin_layout Subsubsection
AT Command Mode Operation
\end_layout

\begin_layout Standard
The command mode grants the ability to modify parameters within the firmware
 of the Xbee Series 2 module.
 To enter the command mode on the Xbee platform, send the characters 
\begin_inset Quotes eld
\end_inset

+++
\begin_inset Quotes erd
\end_inset

 to the DIN UART line.
 Upon successful reception, the Xbee module will respond with 
\begin_inset Quotes eld
\end_inset

OK
\begin_inset Quotes erd
\end_inset

 on the DOUT UART line.
 Once this is received, parameters can be modified within the Xbee firmware.
 The format for changing a parameter consists of having the characters 
\begin_inset Quotes eld
\end_inset

AT
\begin_inset Quotes erd
\end_inset

 and the characters of the parameter name assigned to a value.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:AT-Command-Format"

\end_inset

 shows an example of setting the Destination Low address of the Xbee module
 to 2F.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

AT<ASCII Command><Carriage Return>
\end_layout

\begin_layout Plain Layout

ex.
 ATDL2F<CR>
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
AT Command Format 
\begin_inset CommandInset label
LatexCommand label
name "fig:AT-Command-Format"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

 If no command is sent through the UART interface within 3 seconds, the
 Xbee module will automatically exit out of AT Command Mode.
 
\end_layout

\begin_layout Subsubsection
Transparent Operation
\end_layout

\begin_layout Standard
The most simplistic of the operation modes of the Xbee Series 2 platform,
 transparent mode enables the Xbee platform to transmit the raw serial character
s from the Serial Receive Buffer onto the RF link.
 The destination high and destination low addresses must be specified in
 the firmware of the Xbee platform in order for a successful transmission/recept
ion to take place.
 Transparent operation allows the user to transmit data through the RF link
 without the specification of header information such as the destination
 address, packet size, and other packet information.
 The user simply transmits the character data through the DIN line and the
 Xbee module will transmit it to the destination module specified by the
 destination high and destination low addresses in the module firmware.
 When in transparent operation and receiving RF data, the Xbee module automatica
lly conditions the received RF packet into the raw character data that was
 received, and the received data will be available on the DOUT line.
 An example depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:An-example-of transparent operation"

\end_inset

 shows what data needs to be present on the DIN line of the transmitting
 Xbee module and what data that will be seen on the DOUT line of the receiving
 Xbee module at the conclusion of the transmission.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{adjustbox}{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename figs/transparent_mode_xbee_example.png
	scale 60

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{adjustbox}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
An example of Data Transmission Scheme in Transparent Operation 
\begin_inset CommandInset label
LatexCommand label
name "fig:An-example-of transparent operation"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sample-Python-Script for Transparent Operation"

\end_inset

 shows Python scripting that would be programmed into the UART compatible
 microprocessor for sending data through UART to the transmitting Xbee module
 (Transmission Process in Python Scripting), and Python scripting that would
 be programmed to the UART compatible microprocessor for receiving data
 through the UART from the receiving Xbee module ( Reception Process in
 Python Scripting).
 It can be shown from the Transmission Process in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sample-Python-Script for Transparent Operation"

\end_inset

 does not require any packet formation/construction.
 Only the data payload, 'A' , must be sent to the Xbee module for RF transmissio
n.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,breaklines=true"
inline false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

##########Transmission Process in Python Scripting###########
\end_layout

\begin_layout Plain Layout

self.ser_conn = ser.Serial(port = serialport,baudrate=baudrate,stopbits =
 1,parity = 'N',bytesize = 8,)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

self.ser_conn.write('A') # Transmit the character 'A' to the Xbee Module for
 RF transmission.
 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

########## Reception Process in Python Scripting##########
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

self.ser_conn = ser.Serial(port = serialport,baudrate=baudrate,stopbits =
 1,parity = 'N',bytesize = 8,)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

#See how many bytes are in the receive buffer.
          
\end_layout

\begin_layout Plain Layout

content_size_in_rx_buffer = self.ser_conn.inWaiting()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while content_size_in_rx_buffer:            
\end_layout

\begin_layout Plain Layout

	data_chunk = self.ser_conn.read(content_size_in_rx_buffer)             
\end_layout

\begin_layout Plain Layout

	content_size_in_rx_buffer -= len(data_chunk)             
\end_layout

\begin_layout Plain Layout

    received_data.extend(data_chunk)#string type
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sample Python Script for Microcontrollers used to Drive Xbee Transmitting
 Module and Xbee Receiving Module in Transparent Operation Mode.
\begin_inset CommandInset label
LatexCommand label
name "fig:Sample-Python-Script for Transparent Operation"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The maximum amount of data that can be transmitted at a single time by the
 Xbee module while in Transparent mode is 72 bytes.
 While in Transparent mode, there can only be point to point communication
 established, as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:An-example-of transparent operation"

\end_inset

.
 This point to point communication link is defined by the destination high
 and destination low addresses specified (described in AT Command Mode section)
 within the firmware of the transmitting Xbee module.
\end_layout

\begin_layout Subsubsection
Application Programming Interface(
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "API"
description "Application Programming Interface"

\end_inset

) Mode
\end_layout

\begin_layout Standard
API operation mode is an alternative to the Transparent Operation.
 This operation is a frame-based protocol that gives the application the
 availablity to interact with networking capabilities of the the Xbee module
 
\begin_inset CommandInset citation
LatexCommand cite
key "xbeedatasheet"

\end_inset

.
 This feature gives the user the flexibility of constructing more complex
 networks topologies that included multiple Xbee modules, as well as the
 flexibility to perform broadcasti/multicast transmissions.
 To enable API mode for the Xbee module, the 
\begin_inset Quotes eld
\end_inset

AP
\begin_inset Quotes erd
\end_inset

 parameter within the Xbee module's firmware must be set to 
\begin_inset Quotes eld
\end_inset

1
\begin_inset Quotes erd
\end_inset

.
 This is modification is achieved through entering Command Mode and changing
 the parameter by sending the characters 
\begin_inset Quotes eld
\end_inset

ATAP=1
\begin_inset Quotes erd
\end_inset

 while in Command mode.
 
\end_layout

\begin_layout Standard
When in API mode, data is encapuslated within a UART dataframe structure
 as depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Generic-UART-Dataframe"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{adjustbox}{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename figs/UART Data Frame Structure.png
	scale 90

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{adjustbox}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Generic UART Data Frame Structure 
\begin_inset CommandInset citation
LatexCommand cite
key "xbeedatasheet"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Generic-UART-Dataframe"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The start demiliter of the UART data frame denotes the start of the frame.
 The start delimiter value will be 0x7E regardless of the type of API dataframe.
 The second field of the UART data frame is the Length field.
 The Length field specifies the number of bytes after the LSB, excluding
 the Checksum field.
 This is essentially the length of the Frame Data field.
 The Frame Data field is specific to the type of the API data frame used
 and contains the payload of the data frame as well.
 Depending on the type of API data frame, the size of the Frame Data field
 can vary.
 The Checksum Field is used to validate the integrity of the overall Data
 Frame and detect in errors within the transmission.
 The Checksum is calculated by the following procedure
\end_layout

\begin_layout Enumerate
Calculate the sum of all the bytes after the Least Signifcant Bit (
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "LSB"
description "Least Significant Bit"

\end_inset

).
\end_layout

\begin_layout Enumerate
Mask the resulting sum with 0xFF.
\end_layout

\begin_layout Enumerate
Subtract the resulting Value from 255.
\end_layout

\begin_layout Standard
There are various API types supported by the Xbee Series 2 platform and
 ZigBee that can be found in 
\begin_inset CommandInset citation
LatexCommand cite
key "xbeedatasheet"

\end_inset

.
 The two API types used in this research however is the Zigbee Transmit
 Request (16-bit network addressing) and ZigBee Receive Packet.
 
\end_layout

\begin_layout Standard
The ZigBee Transmit Request has a data frame structure similar to the one
 depicted in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Generic-UART-Dataframe"

\end_inset

, however, the Frame Data Field is comprised of header information that
 specifies the API type, destination address and payload of the data frame.
 The specific API data frame for the ZigBee Transmit Request (16 bit addressing)
 API data type is depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ZigBee-Transmit-Request-16bit"

\end_inset

.
 The API identifier for this API type is 0x01 as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ZigBee-Transmit-Request-16bit"

\end_inset

.
 The Frame ID field is responsible for identifying the UART data frame for
 the host to match with a subsequent response.
 In this research, this field will be set to zero, since a response is not
 needed.
 The Destination Address field is the 16 bit address of the desired destination
 node.
 The options field specifies extra functionalities within the transmission.
 Such functionalities are the ability to disable transmit retries, and invoking
 a traceroute of the transmission.
 By default, this field is set as 0x00 in order to disable these options.
 The Payload field is the actual data that needs to be transmitted to the
 destination.
 The checksum is used for validating the data frame integrity as discussed
 earlier in this sub section.
 Data must be encapuslated in a data frame similar to the one in Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ZigBee-Transmit-Request-16bit"

\end_inset

 for every transmission.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{adjustbox}{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename figs/Tx16 Request.png
	scale 90

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{adjustbox}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
ZigBee Transmit Request for 16 Bit Addressing
\begin_inset CommandInset label
LatexCommand label
name "fig:ZigBee-Transmit-Request-16bit"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The ZigBee Recieve Packet (16 bit addressing) is the API type that is found
 when a packet is recieved from a transmitting source node that utilizes
 ZigBee Transmit Request API type.
 As depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ZigBee-Receive-Packet-16bit-addressing"

\end_inset

, the start delimiter, Most Significant Bit (
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "MSB"
description "Most Significant Bit"

\end_inset

) and LSB fields are similar to the structure of the ZigBee Transmit Request
 data frame.
 The API Identifier field however, is 0x81.
 This is the API identifier of ZigBee Recieve Packet for 16 bit addressing.
 After the API Identifier field, the Source Address field shows the 16 bit
 address of the transmitting node.
 The Received Signal Strength Index(
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "RSSI"
description "Received Signal Strength Index "

\end_inset

) of the RF packet is characterized as a 1 byte value in the RSSI field.
 The RSSI value is helpful in determining the relative distance of the source
 node.
 The Options field specifies options such as packet acknowledgement.
 Similar to the ZigBee Transmit Request API data frame, the Payload of the
 ZigBee Receive Packet API data frame should never exceed 100 bytes.
 The last byte within the dataframe is the Checksum field.
 The checksum of the received data packet can be validated through the following
 procedure.
 
\end_layout

\begin_layout Enumerate
Calculate the sum of all the bytes after the LSB (including the checksum).
\end_layout

\begin_layout Enumerate
Mask the resulting sum with 0xFF.
\end_layout

\begin_layout Enumerate
If the result is 0xFF, there is no error within the data frame.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{adjustbox}{center}
\end_layout

\end_inset


\begin_inset Graphics
	filename figs/Tx16 Receive-message.png
	scale 90

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{adjustbox}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
ZigBee Receive Packet for 16 Bit Addressing
\begin_inset CommandInset label
LatexCommand label
name "fig:ZigBee-Receive-Packet-16bit-addressing"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Vision system used in Swarm Implementation 
\end_layout

\begin_layout Section
Hardware Used 
\end_layout

\begin_layout Standard
The hardware used
\end_layout

\begin_layout Section
Software Environment
\end_layout

\begin_layout Section
Implementation
\end_layout

\begin_layout Chapter
Swarm Algorithm Design and Implementation
\end_layout

\begin_layout Section
Communication Platform Library 
\end_layout

\begin_layout Subsubsection
Capabilities and Functionality
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement t
wide true
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename pasted1.png
	scale 200

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
test-figure
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Position Recognition and Coordination
\end_layout

\begin_layout Section
Fine -Grained Position Coordination and Maintenance 
\end_layout

\begin_layout Section
Coarse-Grain Position Maintenance and Movement Vector Construction 
\end_layout

\begin_layout Section
Swarm Maintenance 
\end_layout

\begin_layout Section
Obstacle Early Detection System
\end_layout

\begin_layout Section
Movement Interface with Flight Controller 
\end_layout

\begin_layout Section
Overall Software Architecture
\end_layout

\begin_layout Chapter
Testing and Results
\end_layout

\begin_layout Chapter
Future Work and Concerns
\end_layout

\begin_layout Chapter
Conclusion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbmatterchapterformat
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "references_db"
options "plain"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
uncctocformat{chapter}{0pt}{350pt}{
\backslash
appendixname~
\backslash
thecontentslabel:~}
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
chaptertitlename}{APPENDIX}
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

% The default setting for appendices excludes sections, subsections, etc.
 from
\end_layout

\begin_layout Plain Layout

% the TABLE OF CONTENTS.
\end_layout

\begin_layout Plain Layout

% If you want these in the TABLE OF CONTENTS, increase the number in the
 line below:
\end_layout

\begin_layout Plain Layout

% 1 - Appendices, Sections / 2 - Appendices, Sections, Subsections / 3 -
 etc 
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout


\backslash
addtocontents{toc}{
\backslash
protect
\backslash
setcounter{tocdepth}{0}}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\start_of_appendix
Software Constructed
\end_layout

\begin_layout Standard
The appendices should be used for whatever material you or your advisory
 committee believes should be included, but would not be appropriate in
 the text of the thesis or dissertation.
 Such materials can include:
\end_layout

\begin_layout Enumerate
the original data obtained in the thesis or dissertation research, including
 computer programs and printouts, surveys, or correspondence;
\end_layout

\begin_layout Enumerate
detailed descriptions of procedures, which go beyond the general outline
 of methods and approaches presented in the text;
\end_layout

\begin_layout Enumerate
a particularly extensive review of the literature and other information
 that may be useful to future scholars who may wish to delve more deeply
 into the research topic
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Enumerate
.
\end_layout

\begin_layout Section
Section in appendix
\end_layout

\begin_layout Standard
This will be source code used within research.
\end_layout

\begin_layout Vita
Will be included.
\end_layout

\end_body
\end_document
